ALGORITHMS

READ / WATCH LIST


SOURCES
- The Last Algorithms Course You'll Need (The Primeagen)
- Introduction to Algorithms, third edition (Thomas Cormen)
- A Common-Sense Guide to Data Structures and Algorithms (Jay Wengrow)

CONTENTS
* BIG O NOTATION

ALGORITHMS ////////////////////////////////////////////////////////////////////////////////////////

# BIG O NOTATION
	Not an exact measurement, generalizes growth of algorithms
	Used to categorize algorithm time or memory requirements based on input
	Informs about the performance of algorithms and data structures

	How does the growth of the input affect performance and memory requirement?
	
	Capital letter O	: worst case (upper bound)
	Capital theta		: best case (lower bound) and worst case (upper bound) are the same
	Constants are dropped out

	In cases where the data set is small enough, slower algorithms with faster starts may still
		be used instead of faster algorithms with slower starts

	EXAMPLE 1 ( Linear, or O(n) )
		Take a string and iterate over it
		For every unit of the string, the loop has to be executed again
		The growth is LINEAR

	EXAMPLE 2 ( Constant time, or O(1) )
		Reading from an array takes the same number of steps no matter the size of input
	
	EXAMPLE 3 ( O(n^2) )
		A loop within a loop where a string is iterated over twice
	
	EXAMPLE 4 ( O(log n) )
		Binary search
		Divide in half for each iteration
