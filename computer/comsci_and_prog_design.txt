PROGRAM DESIGN

SOURCE:
* How to Design Programs (2nd edition): https://htdp.org/2022-8-7/Book/index.html
* Videos: https://www.youtube.com/@systematicprogramdesign7962/playlists

CONTENT ////////////////////////////////////////////////////////////////////////////////////////////////////
* SYSTEMATIC PROGRAM DESIGN RECIPE

PROGRAM DESIGN /////////////////////////////////////////////////////////////////////////////////////////////
# SYSTEMATIC PROGRAM DESIGN RECIPE
	Recipe: Function Design
		Signature
		Purpose Statement
		Examples/tests
		Stub
		Template
		Function body
		Testing and debugging
		
		Example:
		
			; Number -> Number			; Signature
			; Produce 2 times the given number	; Purpose Statement
			(check-expect (double 2) 4)		; Examples/tests
			(check-expect (double 4.2) 8.4)
		
			; (define (double n) 0)				; Stub
			; (define (double n)				; Template
			;	(... n))
		
			(define (double n)				; Function body
				(* 2 n))
	
	Recipe: Data definition
		Type comment
			Show how to form data
		Interpretation
			Establish information/data correspondence
		Examples
		Template for one argument function that uses the defined data
		
		; tlcolor is one of:
		; - 0
		; - 1
		; - 2
		; Interpretation: color of a traffic light - 0 red, 1 yellow, 2 green
		<examples are redundant for enumerations>
		(define (fn_for_tlcolor c)
			(cond[(= c 0) (...)]
			     [(= c 1) (...)]
			     [(= c 2) (...)]))
			     
		Example for Atomic Data:
		
			; cityname is String				; Type comment
			; Interpretation: the name of a city		; Interpretation
			(define cityname1 "Manila")			; Examples
			(define cityname2 "Roxas")
			#;						; #; will comment out the following expression or 
			<there should be no space here>			; 	function definition
			(define (fn_for_cityname cn)			; Template
				(...cn))
				
		Example for Intervals:
		
			; seats is Natural[1, 10]
			; Interpretation: seat numbers in a row, 1 & 10 are aisle seats
			(define seat1 1) ; aisle
			(define seat2 5) ; middle
			(define seat3 10) ; aisle
			#;
			(define (fn_for_seats seatn)
				(...seatn))
				
		Example for Enumerations: refer to the traffic light example above
		
		Example for Itemizations:

			; countdown is one of:
			; - #false
			; - Natural[1, 10]
			; - "complete"
			; Interpretation:
			;	#false 		- countdown not yet started
			;	Natural[1,10] 	- indicates how many seconds left in countdown
			;	"complete" 	- countdown finished
			(define CD1 #false)
			(define CD2 10) ; countdown just started
			(define CD3 5) ; middle of countdown
			(define CD4 1) ; countdown almost over
			(define CD5 "complete")
			#;
			(define (fn_for_countdown cd)
				(cond[(false? cd) (...)]
				     [(and (number? (<= 1 c 10))) (...)]
				     [else (...)]))
					
			
